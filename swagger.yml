openapi: 3.0.3
info:
  title: Image Service API
  version: "1.0"
  description: API pour la gestion des images (upload, listing, download, suppression).
servers:
  - url: http://localhost:5002
    description: Serveur local de développement

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID unique de l’image
          example: "550e8400-e29b-41d4-a716-446655440000"
        user_id:
          type: string
          format: uuid
          description: ID de l'utilisateur propriétaire
        filename_original:
          type: string
          description: Nom original du fichier
          example: "photo.jpg"
        filename_stored:
          type: string
          description: Nom du fichier stocké
          example: "550e8400-e29b-41d4-a716-446655440000_1657891234.jpg"
        content_type:
          type: string
          description: Type MIME du fichier
          example: "image/jpeg"
        size:
          type: integer
          description: Taille du fichier en octets
          example: 123456
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: string
          nullable: true

security:
  - BearerAuth: []

paths:
  /upload:
    post:
      summary: Upload d'une image
      description: Upload un fichier image autorisé (png, jpg, jpeg, gif) avec authentification JWT.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: Fichier image à uploader
      responses:
        '201':
          description: Image uploadée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '400':
          description: Erreur client (pas de fichier, type non autorisé, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Non autorisé (JWT invalide ou absent)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur (stockage ou base de données)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /images:
    get:
      summary: Liste des images de l'utilisateur connecté
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Liste des images
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
        '401':
          description: Non autorisé (JWT invalide ou absent)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /images/{image_id}:
    get:
      summary: Récupérer les métadonnées d'une image
      security:
        - BearerAuth: []
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID de l’image
      responses:
        '200':
          description: Métadonnées de l’image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Accès interdit (image non possédée par l’utilisateur)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Image non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Supprimer une image
      security:
        - BearerAuth: []
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID de l’image à supprimer
      responses:
        '200':
          description: Image supprimée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Image deleted successfully"
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Accès interdit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Image non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /images/{image_id}/download:
    get:
      summary: Télécharger une image
      security:
        - BearerAuth: []
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID de l’image à télécharger
      responses:
        '200':
          description: Contenu de l’image (stream)
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/gif:
              schema:
                type: string
                format: binary
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Accès interdit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Image non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
